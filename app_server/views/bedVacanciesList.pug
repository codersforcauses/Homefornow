extends navbarDefault
include _includes/contactModal
include _includes/vacancyListPanel

block content
  .container-fluid
    #banner.page-header(style="margin-bottom: 80px;")
      .row
          h1.bang LET'S FIND A
          h1.bang HOME 
            span.sec-color.bang 
              if serviceType == 'crisis'
                | FOR NOW.
              else
                | LONG TERM
    .row
      if locations.length == 0
        h2
          | We're really sorry.<br>There are no current vacancies that you are eligible for.<br><br>
          | HomeForNow only works for young people 15-25 in Perth, Western Australia
        .spacer-xs
        h3 Here are some numbers to call if you are in Perth and need help
        .row
          .col-xs-6
            h3.bold='Entry Point'
            h4.bold.sec-color.
              6496 0001 </br>
              1800 124 684
          .col-xs-6
            h3.bold='Crisis Care'
            h4.bold.sec-color.
              9223 1111 </br>
              1800 199 008
      else
        each location in locations
          +contactModal(userName, location.name, location._id, location.available, location.uri, location.thankyouMessage, locationLogos[locations.indexOf(location)])
          +vacancyPanel(location.name, location.address.suburb, true, location.description, location.uri, locationImgs[locations.indexOf(location)])
      .spacer-xs
      each dlocation in dlocations
          +vacancyPanel(dlocation.name, dlocation.address.suburb, false, dlocation.description, dlocation.uri, dlocationImgs[dlocations.indexOf(dlocation)])
    .spacer-xs
    .row
      .panel
        .panel-header
          h4.text-center Your Location
        .panel-body(style="padding: 0;")
          #userloc(style="height: 75vh;")


  script.
    /**
    * Map that displays on the user location
    */
    function userMap()
    {
      const lat = Number("#{userCoords.lat}");
      const long = Number("#{userCoords.long}");
      const coord = {lat: lat, lng: long}; // user current latlng
      const servicesAvail = !{JSON.stringify(locations)} ;
      const servicesNotAvail = !{JSON.stringify(dlocations)};

      const map = new google.maps.Map(document.getElementById('userloc'), {
        zoom: 13,
        center: coord,
        disableDefaultUI: true,
        zoomControl: false,
      });

      const marker = new google.maps.Marker({
        position: coord,
        map: map
      });

      let servicesAvailMarker = [];
      let servicesNotMarker = [];

      servicesAvail.forEach( function(serv) {
        const name = serv.name;
        const latitude = Number(serv.address.coordinates.coordinates[1]);
        const longitude = Number(serv.address.coordinates.coordinates[0]);

        const pos = {lat: latitude, lng: longitude};

        servicesAvailMarker.push( [ name, pos ] );
      });
      servicesNotAvail.forEach( function(serv) {
        const name = serv.name;
        const latitude = Number(serv.address.coordinates.coordinates[1]);
        const longitude = Number(serv.address.coordinates.coordinates[0]);

        const pos = {lat: latitude, lng: longitude};

        servicesNotMarker.push( [ name, pos ] );
      });

      //Circle marker for available services
      for( let i = 0; i < servicesAvailMarker.length; i++) {
        let con = '<div id="content">'+
                  '<h4>'+ servicesAvailMarker[i][0] +'</h4>'+
                  '</div>';
        let infowindow = new google.maps.InfoWindow({
                      content: con
                    });
                    
        let cityCircle = new google.maps.Circle({
          strokeColor: '#0000FF',
          strokeOpacity: 0.5,
          strokeWeight: 2,
          fillColor: '#0000FF',
          fillOpacity: 0.25,
          map: map,
          center: servicesAvailMarker[i][1],
          radius: 1.75 * 1000 //radius in metres
        });
        
        google.maps.event.addListener(cityCircle, 'click', function(){
          infowindow.setPosition(cityCircle.getCenter());
          infowindow.open(map);
        });
      }

      // Service marker for non available services
      for( let i = 0; i < servicesNotMarker.length; i++) {
        let con = '<div id="content">'+
                  '<h4>'+ servicesNotMarker[i][0] +'</h4>'+
                  '</div>';
        let infowindow = new google.maps.InfoWindow({
                      content: con
                    });
                    
        let cityCircle = new google.maps.Circle({
          strokeColor: '#FF0000',
          strokeOpacity: 0.5,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.25,
          map: map,
          center: servicesNotMarker[i][1],
          radius: 1.75 * 1000 //radius in metres
        });
        
        google.maps.event.addListener(cityCircle, 'click', function(){
          infowindow.setPosition(cityCircle.getCenter());
          infowindow.open(map);
        });
      }
    }
  script(src='/javascripts/requests.js')
  script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key='+process.env.embed_maps_api+'&callback=userMap')
  script. 
    Array.from(document.forms).forEach(function(form) {
      if (localStorage.email) {
        form.elements.email.value = localStorage.email 
      }

      if (localStorage.number) {
        form.elements.number.value = localStorage.number 
      }
    }) 